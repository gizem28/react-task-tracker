{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gizem\\\\OneDrive\\\\Skrivebord\\\\frontend projects\\\\task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from './components/Header';\nimport { useState, useEffect } from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setShowAddTask] = useState(false);\n  const baseUrl = \"http://localhost:5000/tasks\"; //Create Read Update Delete\n  //Fetch tasks\n  // const fetchTask= async()=>{\n  //   const res = await fetch(baseUrl)\n  //   const data =await res.json();\n  //   console.log(data)};\n  //Fetck Task with axios\n\n  const fetchTask = async () => {\n    // const res= await axios.get(baseUrl);\n    const {\n      data\n    } = await axios.get(baseUrl);\n    setTasks(data);\n  };\n\n  useEffect(() => {\n    fetchTask();\n  }, []); //*Add Task Fetch Function\n  // const addTask = async(newTask)=>{\n  //   const res = await fetch(baseUrl,{\n  //     method:\"POST\",\n  //     headers:{\n  //       \"Content-type\":\"application/json\"\n  //     },\n  //     body:JSON.stringify(newTask)\n  //   });\n  //   fetchTask(res);\n  // };\n  //*Add Task Axios\n\n  const addTask = async newTask => {\n    const res = await axios.post(baseUrl, newTask);\n    fetchTask(res);\n  }; // const addTask = (newTask) => {\n  //   const id = Math.floor(Math.random() * 100) + 1;\n  //   const addNewTask = {\n  //     id,\n  //     ...newTask\n  //   };\n  //   setTasks([...tasks, addNewTask])\n  // }\n  //*Delete Task\n  // const deleteTask = (deletedTaskId) => {\n  //   console.log(\"delete\", deletedTaskId);\n  //   setTasks(tasks.filter((task) => task.id !== deletedTaskId))\n  // }\n  //*Delete with Fetch\n  // const deleteTask= async (deletedTaskId)=>{\n  // await fetch(`${baseUrl}/${deletedTaskId}`, {\n  //   method:\"DELETE\",\n  // });\n  // fetchTask();\n  // };\n  //*Delete with Axios\n\n\n  const deleteTask = async deletedTaskId => {\n    await axios.delete(`${baseUrl}/${deletedTaskId}`);\n    fetchTask();\n  }; //*Toggle Done\n  // const toggleDone = (toggleDoneId) => {\n  //   setTasks(\n  //     tasks.map((task) => task.id === toggleDoneId ? {\n  //       ...task,\n  //       isDone: !task.isDone\n  //     } : task)\n  //   )\n  // }\n  //*Toggle Done\n\n\n  const toggleDone = async toggleDoneId => {\n    const res = await fetch(`${baseUrl}/${toggleDoneId}`);\n    const data = await res.json();\n    const updatedTask = { ...data,\n      isDone: !data.isDone\n    };\n    toggleDone(toggleDoneId);\n  }; //SHOW ADD TASK\n\n\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      showAddTask: showAddTask,\n      toggleShow: toggleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 22\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      deleteTask: deleteTask,\n      toggleDone: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        color: \"gray\"\n      },\n      children: \" No Task To Show \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"PLX2zQ+tVGuPD20Z1DPltP04Zzk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gizem/OneDrive/Skrivebord/frontend projects/task-tracker/src/App.js"],"names":["Header","useState","useEffect","Tasks","AddTask","axios","App","tasks","setTasks","showAddTask","setShowAddTask","baseUrl","fetchTask","data","get","addTask","newTask","res","post","deleteTask","deletedTaskId","delete","toggleDone","toggleDoneId","fetch","json","updatedTask","isDone","toggleShow","length","textAlign","color"],"mappings":"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","sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport {\n  useState, useEffect\n} from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport axios from 'axios';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const baseUrl = \"http://localhost:5000/tasks\";\n\n//Create Read Update Delete\n\n//Fetch tasks\n// const fetchTask= async()=>{\n//   const res = await fetch(baseUrl)\n//   const data =await res.json();\n//   console.log(data)};\n\n//Fetck Task with axios\nconst fetchTask=async()=>{\n  // const res= await axios.get(baseUrl);\n  const {data}= await axios.get(baseUrl);\n  setTasks(data);\n};\n\nuseEffect(()=>{\n  fetchTask()\n  }, [])\n\n\n  //*Add Task Fetch Function\n  // const addTask = async(newTask)=>{\n  //   const res = await fetch(baseUrl,{\n  //     method:\"POST\",\n  //     headers:{\n  //       \"Content-type\":\"application/json\"\n  //     },\n  //     body:JSON.stringify(newTask)\n  //   });\n  //   fetchTask(res);\n  // };\n\n  //*Add Task Axios\n  const addTask = async(newTask)=>{\n    const res =await axios.post(baseUrl, newTask)\n    fetchTask(res);\n  }\n\n  // const addTask = (newTask) => {\n  //   const id = Math.floor(Math.random() * 100) + 1;\n  //   const addNewTask = {\n  //     id,\n  //     ...newTask\n  //   };\n  //   setTasks([...tasks, addNewTask])\n  // }\n\n  //*Delete Task\n  // const deleteTask = (deletedTaskId) => {\n  //   console.log(\"delete\", deletedTaskId);\n  //   setTasks(tasks.filter((task) => task.id !== deletedTaskId))\n  // }\n\n  //*Delete with Fetch\n  // const deleteTask= async (deletedTaskId)=>{\n  // await fetch(`${baseUrl}/${deletedTaskId}`, {\n  //   method:\"DELETE\",\n  // });\n  // fetchTask();\n  // };\n\n  //*Delete with Axios\n  const deleteTask = async(deletedTaskId)=>{\n    await axios.delete(`${baseUrl}/${deletedTaskId}`);\n    fetchTask();\n  }\n\n  //*Toggle Done\n  // const toggleDone = (toggleDoneId) => {\n  //   setTasks(\n  //     tasks.map((task) => task.id === toggleDoneId ? {\n  //       ...task,\n  //       isDone: !task.isDone\n  //     } : task)\n  //   )\n  // }\n\n  //*Toggle Done\n  const toggleDone = async(toggleDoneId)=>{\n    const res= await fetch(`${baseUrl}/${toggleDoneId}`)\n    const data =await res.json();\n    const updatedTask={...data, isDone: !data.isDone}\n    toggleDone(toggleDoneId);\n  }\n\n  //SHOW ADD TASK\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return ( <\n    div className = \"container\" >\n    <\n    Header title = \"Task Tracker\"\n    showAddTask = {\n      showAddTask\n    }\n    toggleShow = {\n      toggleShow\n    }\n    />\n\n    {\n      showAddTask && < AddTask addTask = {\n        addTask\n      }\n      />}\n\n      {\n        tasks.length > 0 ? ( < Tasks tasks = {\n            tasks\n          }\n          deleteTask = {\n            deleteTask\n          }\n          toggleDone = {\n            toggleDone\n          }\n          />\n          ):( \n            <p style = {{\n              textAlign: \"center\",\n              color: \"gray\"\n            }} > No Task To Show </p>\n        )} </div>\n    );\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}