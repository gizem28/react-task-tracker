{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gizem\\\\OneDrive\\\\Skrivebord\\\\frontend projects\\\\task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from './components/Header';\nimport { useState, useEffect } from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport axios from 'axios'; // import image from \"./sky.jpg\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const baseUrl = \"https://task-tracker28.herokuapp.com/tasks\"; // const baseUrl = \"http://localhost:5000/tasks\";\n\n  const [tasks, setTasks] = useState([//   {\n    //     id: 1,\n    //     text: \"Study React Pre-Class Notes\",\n    //     day: \"Dec 12th at 2:30pm\",\n    //     isDone: false,\n    //   },\n    //   {\n    //     id: 2,\n    //     text: \"Feed the Dog\",\n    //     day: \"Dec 13th at 1:30pm\",\n    //     isDone: true,\n    //   },\n    //   {\n    //     id: 3,\n    //     text: \"Attend In-Class\",\n    //     day: \"Dec 14th at 3:00pm\",\n    //     isDone: false,\n    //   },\n  ]); //Create Read Update Delete\n  //Fetch tasks\n  // const fetchTask= async()=>{\n  //   const res = await fetch(baseUrl)\n  //   const data =await res.json();\n  //   console.log(data)};\n  //Fetck Task with axios\n\n  const fetchTask = async () => {\n    // const res= await axios.get(baseUrl);\n    const {\n      data\n    } = await axios.get(baseUrl);\n    setTasks(data);\n  };\n\n  useEffect(() => {\n    fetchTask();\n  }, []); //*Add Task Fetch Function\n  // const addTask = async(newTask)=>{\n  //   const res = await fetch(baseUrl,{\n  //     method:\"POST\",\n  //     headers:{\n  //       \"Content-type\":\"application/json\"\n  //     },\n  //     body:JSON.stringify(newTask)\n  //   });\n  //   fetchTask(res);\n  // };\n  //*Add Task Axios\n\n  const addTask = async newTask => {\n    await axios.post(baseUrl, newTask);\n    fetchTask();\n  }; // const addTask = (newTask) => {\n  //   const id = Math.floor(Math.random() * 100) + 1;\n  //   const addNewTask = {\n  //     id,\n  //     ...newTask\n  //   };\n  //   setTasks([...tasks, addNewTask])\n  // }\n  //*Delete Task\n  // const deleteTask = (deletedTaskId) => {\n  //   console.log(\"delete\", deletedTaskId);\n  //   setTasks(tasks.filter((task) => task.id !== deletedTaskId))\n  // }\n  //*Delete with Fetch\n  // const deleteTask= async (deletedTaskId)=>{\n  // await fetch(`${baseUrl}/${deletedTaskId}`, {\n  //   method:\"DELETE\",\n  // });\n  // fetchTask();\n  // };\n  //*Delete with Axios\n\n\n  const deleteTask = async deletedTaskId => {\n    await axios.delete(`${baseUrl}/${deletedTaskId}`);\n    fetchTask();\n  }; //*Toggle Done\n  // const toggleDone = (toggleDoneId) => {\n  //   setTasks(\n  //     tasks.map((task) => task.id === toggleDoneId ? {\n  //       ...task,\n  //       isDone: !task.isDone\n  //     } : task)\n  //   )\n  // }\n  //*Toggle Done Fetch\n\n\n  const toggleDone = async toggleDoneId => {\n    // const res= await fetch(`${baseUrl}/${toggleDoneId}`)\n    // const data =await res.json();\n    // const updatedTask={...data, isDone: !data.isDone};\n    //   await fetch(`${baseUrl}/${toggleDoneId}`, {\n    //     method:\"PUT\",\n    //     headers:{\n    //       \"Content-type\":\"application/json\",\n    //     },\n    //     body: JSON.stringify(updatedTask),\n    //   });\n    //   fetchTask();\n    // };\n    //*Toggle Done Axios\n    const {\n      data\n    } = await axios.get(`${baseUrl}/${toggleDoneId}`);\n    const updatedTask = { ...data,\n      isDone: !data.isDone\n    };\n    await axios.put(`${baseUrl}/${toggleDoneId}`, updatedTask);\n    fetchTask();\n  }; //SHOW ADD TASK\n\n\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      showAddTask: showAddTask,\n      toggleShow: toggleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 22\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      deleteTask: deleteTask,\n      toggleDone: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        color: \"gray\"\n      },\n      children: \" No Task To Show \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"F2SeMXv+GMhOGClrQpFGJIctAJk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gizem/OneDrive/Skrivebord/frontend projects/task-tracker/src/App.js"],"names":["Header","useState","useEffect","Tasks","AddTask","axios","App","showAddTask","setShowAddTask","baseUrl","tasks","setTasks","fetchTask","data","get","addTask","newTask","post","deleteTask","deletedTaskId","delete","toggleDone","toggleDoneId","updatedTask","isDone","put","toggleShow","length","textAlign","color"],"mappings":"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","sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport {\n  useState, useEffect\n} from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport axios from 'axios';\n// import image from \"./sky.jpg\";\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const baseUrl =\"https://task-tracker28.herokuapp.com/tasks\";\n  // const baseUrl = \"http://localhost:5000/tasks\";\n\n  const [tasks, setTasks] = useState([\n  //   {\n  //     id: 1,\n  //     text: \"Study React Pre-Class Notes\",\n  //     day: \"Dec 12th at 2:30pm\",\n  //     isDone: false,\n  //   },\n  //   {\n  //     id: 2,\n  //     text: \"Feed the Dog\",\n  //     day: \"Dec 13th at 1:30pm\",\n  //     isDone: true,\n  //   },\n  //   {\n  //     id: 3,\n  //     text: \"Attend In-Class\",\n  //     day: \"Dec 14th at 3:00pm\",\n  //     isDone: false,\n  //   },\n  ]);\n\n\n//Create Read Update Delete\n\n//Fetch tasks\n// const fetchTask= async()=>{\n//   const res = await fetch(baseUrl)\n//   const data =await res.json();\n//   console.log(data)};\n\n//Fetck Task with axios\nconst fetchTask=async()=>{\n  // const res= await axios.get(baseUrl);\n  const {data}= await axios.get(baseUrl);\n  setTasks(data);\n};\n\nuseEffect(()=>{\n  fetchTask()\n  }, [])\n\n\n  //*Add Task Fetch Function\n  // const addTask = async(newTask)=>{\n  //   const res = await fetch(baseUrl,{\n  //     method:\"POST\",\n  //     headers:{\n  //       \"Content-type\":\"application/json\"\n  //     },\n  //     body:JSON.stringify(newTask)\n  //   });\n  //   fetchTask(res);\n  // };\n\n  //*Add Task Axios\n  const addTask = async(newTask)=>{\n    await axios.post(baseUrl, newTask)\n    fetchTask();\n  }\n\n  // const addTask = (newTask) => {\n  //   const id = Math.floor(Math.random() * 100) + 1;\n  //   const addNewTask = {\n  //     id,\n  //     ...newTask\n  //   };\n  //   setTasks([...tasks, addNewTask])\n  // }\n\n  //*Delete Task\n  // const deleteTask = (deletedTaskId) => {\n  //   console.log(\"delete\", deletedTaskId);\n  //   setTasks(tasks.filter((task) => task.id !== deletedTaskId))\n  // }\n\n  //*Delete with Fetch\n  // const deleteTask= async (deletedTaskId)=>{\n  // await fetch(`${baseUrl}/${deletedTaskId}`, {\n  //   method:\"DELETE\",\n  // });\n  // fetchTask();\n  // };\n\n  //*Delete with Axios\n  const deleteTask = async(deletedTaskId)=>{\n    await axios.delete(`${baseUrl}/${deletedTaskId}`);\n    fetchTask();\n  };\n\n  //*Toggle Done\n  // const toggleDone = (toggleDoneId) => {\n  //   setTasks(\n  //     tasks.map((task) => task.id === toggleDoneId ? {\n  //       ...task,\n  //       isDone: !task.isDone\n  //     } : task)\n  //   )\n  // }\n\n  //*Toggle Done Fetch\n    const toggleDone = async(toggleDoneId)=>{\n    // const res= await fetch(`${baseUrl}/${toggleDoneId}`)\n    // const data =await res.json();\n    // const updatedTask={...data, isDone: !data.isDone};\n  //   await fetch(`${baseUrl}/${toggleDoneId}`, {\n  //     method:\"PUT\",\n  //     headers:{\n  //       \"Content-type\":\"application/json\",\n  //     },\n  //     body: JSON.stringify(updatedTask),\n  //   });\n  //   fetchTask();\n  // };\n\n   //*Toggle Done Axios\n   const {data}=await axios.get(`${baseUrl}/${toggleDoneId}`);\n   const updatedTask={...data, isDone:!data.isDone};\n\n   await axios.put(`${baseUrl}/${toggleDoneId}`, updatedTask);\n   fetchTask();\n  };\n   \n\n  //SHOW ADD TASK\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return ( <div className = \"container\" >\n    <Header title = \"Task Tracker\"\n    showAddTask = {showAddTask}\n    toggleShow = {toggleShow}/>\n\n    {\n      showAddTask && < AddTask addTask = {addTask}/>}\n\n      {\n        tasks.length > 0 ? ( < Tasks tasks= {tasks}\n          deleteTask = {\n            deleteTask\n          }\n          toggleDone = {\n            toggleDone\n          }\n          />\n          ):( \n            <p style = {{\n              textAlign: \"center\",\n              color: \"gray\"\n            }} > No Task To Show </p>\n        )} </div>\n    );\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}