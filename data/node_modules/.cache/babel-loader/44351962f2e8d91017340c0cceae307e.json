{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gizem\\\\OneDrive\\\\Skrivebord\\\\frontend projects\\\\task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from './components/Header';\nimport { useState } from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Study React Pre-Class Notes\",\n    day: \"Dec 12th at 2:30pm\",\n    isDone: false\n  }, {\n    id: 2,\n    text: \"Feed the Dog\",\n    day: \"Dec 13th at 1:30pm\",\n    isDone: true\n  }, {\n    id: 3,\n    text: \"Attend In-Class\",\n    day: \"Dec 14th at 3:00pm\",\n    isDone: false\n  }]);\n  const [showAddTask, setShowAddTask] = useState(false); //Add Task\n\n  const addTask = newTask => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const addNewTask = {\n      id,\n      ...newTask\n    };\n    setTasks([...tasks, addNewTask]);\n  }; //Delete Task\n\n\n  const deleteTask = deletedTaskId => {\n    console.log(\"delete\", deletedTaskId);\n    setTasks(tasks.filter(task => task.id !== deletedTaskId));\n  }; //Toggle Done\n\n\n  const toggleDone = toggleDoneId => {\n    setTasks(tasks.map(task => task.id === toggleDoneId ? { ...task,\n      isDone: !task.isDone\n    } : task));\n  }; //SHOW ADD TASK\n\n\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      showAddTask: showAddTask,\n      toggleShow: toggleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      deleteTask: deleteTask,\n      toggleDone: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        color: \"gray\"\n      },\n      children: \" No Task To Show \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"mQ3HVwweqQStifzWhALacsR8JLs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gizem/OneDrive/Skrivebord/frontend projects/task-tracker/src/App.js"],"names":["Header","useState","Tasks","AddTask","App","tasks","setTasks","id","text","day","isDone","showAddTask","setShowAddTask","addTask","newTask","Math","floor","random","addNewTask","deleteTask","deletedTaskId","console","log","filter","task","toggleDone","toggleDoneId","map","toggleShow","length","textAlign","color"],"mappings":"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","sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport {\n  useState\n} from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [tasks, setTasks] = useState([{\n      id: 1,\n      text: \"Study React Pre-Class Notes\",\n      day: \"Dec 12th at 2:30pm\",\n      isDone: false,\n    },\n    {\n      id: 2,\n      text: \"Feed the Dog\",\n      day: \"Dec 13th at 1:30pm\",\n      isDone: true,\n    },\n    {\n      id: 3,\n      text: \"Attend In-Class\",\n      day: \"Dec 14th at 3:00pm\",\n      isDone: false,\n    },\n  ]);\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  //Add Task\n  const addTask = (newTask) => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const addNewTask = {\n      id,\n      ...newTask\n    };\n    setTasks([...tasks, addNewTask])\n  }\n\n  //Delete Task\n  const deleteTask = (deletedTaskId) => {\n    console.log(\"delete\", deletedTaskId);\n    setTasks(tasks.filter((task) => task.id !== deletedTaskId))\n  }\n\n  //Toggle Done\n  const toggleDone = (toggleDoneId) => {\n    setTasks(\n      tasks.map((task) => task.id === toggleDoneId ? {\n        ...task,\n        isDone: !task.isDone\n      } : task)\n    )\n  }\n\n  //SHOW ADD TASK\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return ( <\n    div className = \"container\" >\n    <\n    Header title = \"Task Tracker\"\n    showAddTask = {\n      showAddTask\n    }\n    toggleShow = {\n      toggleShow\n    }\n    />\n\n    {\n      showAddTask && < AddTask addTask = {\n        addTask\n      }\n      />}\n\n      {\n        tasks.length > 0 ? ( < Tasks tasks = {\n            tasks\n          }\n          deleteTask = {\n            deleteTask\n          }\n          toggleDone = {\n            toggleDone\n          }\n          />\n          ):( \n            <p style = {{\n              textAlign: \"center\",\n              color: \"gray\"\n            }} > No Task To Show </p>\n        )} </div>\n    );\n  }\n\n  export default App;"]},"metadata":{},"sourceType":"module"}