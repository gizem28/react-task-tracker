{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gizem\\\\OneDrive\\\\Skrivebord\\\\task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from './components/Header';\nimport { useState } from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Study React Pre-Class Notes\",\n    day: \"Dec 12th at 2:30pm\",\n    isDone: false\n  }, {\n    id: 2,\n    text: \"Feed the Dog\",\n    day: \"Dec 13th at 1:30pm\",\n    isDone: true\n  }, {\n    id: 3,\n    text: \"Attend In-Class\",\n    day: \"Dec 14th at 3:00pm\",\n    isDone: false\n  }]);\n  const [showAddTask, setShowAddTask] = useState(false); //Add Task\n\n  const addTask = newTask => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const addNewTask = {\n      id,\n      ...newTask\n    };\n    setTasks([...tasks, addNewTask]);\n  }; //Delete Task\n\n\n  const deleteTask = deletedTaskId => {\n    console.log(\"delete\", deletedTaskId);\n    setTasks(tasks.filter(task => task.id !== deletedTaskId));\n  }; //Toggle Done\n\n\n  const toggleDone = toggleDoneId => {\n    setTasks(tasks.map(task => task.id === toggleDoneId ? { ...task,\n      isDone: !task.isDone\n    } : task));\n  }; //SHOW ADD TASK\n\n\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      showAddTask: showAddTask,\n      toggleShow: toggleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      deleteTask: deleteTask,\n      toggleDone: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        color: \"gray\"\n      },\n      children: \"No Task To Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IbU7fSxVbgo5x8c0M5bE/RU41XI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gizem/OneDrive/Skrivebord/task-tracker/src/App.js"],"names":["Header","useState","Tasks","AddTask","App","tasks","setTasks","id","text","day","isDone","showAddTask","setShowAddTask","addTask","newTask","Math","floor","random","addNewTask","deleteTask","deletedTaskId","console","log","filter","task","toggleDone","toggleDoneId","map","toggleShow","length","textAlign","color"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC;AACEM,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,6BAFR;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,MAAM,EAAE;AAJV,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAPiC,EAajC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAbiC,CAAD,CAAlC;AAqBF,QAAK,CAACC,WAAD,EAAcC,cAAd,IAA8BX,QAAQ,CAAC,KAAD,CAA3C,CAtBe,CAwBb;;AACA,QAAMY,OAAO,GAAEC,OAAD,IAAW;AACvB,UAAMP,EAAE,GAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,IAA8B,CAAvC;AACA,UAAMC,UAAU,GAAE;AAACX,MAAAA,EAAD;AAAK,SAAGO;AAAR,KAAlB;AACAR,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,UAAX,CAAD,CAAR;AACD,GAJD,CAzBa,CA+Bb;;;AACF,QAAMC,UAAU,GAAEC,aAAD,IAAiB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,aAAtB;AACAd,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAcC,IAAD,IAASA,IAAI,CAACjB,EAAL,KAAWa,aAAjC,CAAD,CAAR;AACD,GAHD,CAhCe,CAqCf;;;AACA,QAAMK,UAAU,GAAEC,YAAD,IAAgB;AAC/BpB,IAAAA,QAAQ,CACND,KAAK,CAACsB,GAAN,CAAWH,IAAD,IAAQA,IAAI,CAACjB,EAAL,KAAUmB,YAAV,GAAuB,EACvC,GAAGF,IADoC;AAC9Bd,MAAAA,MAAM,EAAC,CAACc,IAAI,CAACd;AADiB,KAAvB,GACec,IADjC,CADM,CAAR;AAID,GALD,CAtCe,CA6Cf;;;AACA,QAAMI,UAAU,GAAE,MAAKhB,cAAc,CAAC,CAACD,WAAF,CAArC;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,WAAW,EAAEA,WAA1C;AAAuD,MAAA,UAAU,EAAEiB;AAAnE;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEf;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFD,EAIGR,KAAK,CAACwB,MAAN,GAAa,CAAb,gBAAkB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAExB,KAAd;AAAqB,MAAA,UAAU,EAAEc,UAAjC;AAChB,MAAA,UAAU,EAAEM;AADI;AAAA;AAAA;AAAA;AAAA,YAAlB,gBAEI;AAAG,MAAA,KAAK,EAAE;AAACK,QAAAA,SAAS,EAAC,QAAX;AAAqBC,QAAAA,KAAK,EAAC;AAA3B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA3DQ3B,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport { useState } from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Study React Pre-Class Notes\",\n      day: \"Dec 12th at 2:30pm\",\n      isDone: false,\n    },\n    {\n      id: 2,\n      text: \"Feed the Dog\",\n      day: \"Dec 13th at 1:30pm\",\n      isDone: true,\n    },\n    {\n      id: 3,\n      text: \"Attend In-Class\",\n      day: \"Dec 14th at 3:00pm\",\n      isDone: false,\n    },\n  ]);\n\nconst[showAddTask, setShowAddTask]=useState(false)\n\n  //Add Task\n  const addTask=(newTask)=>{\n    const id=Math.floor(Math.random()*100)+1;\n    const addNewTask ={id, ...newTask};\n    setTasks([...tasks, addNewTask])\n  }\n\n  //Delete Task\nconst deleteTask=(deletedTaskId)=>{\n  console.log(\"delete\", deletedTaskId);\n  setTasks(tasks.filter((task)=> task.id!== deletedTaskId))\n}\n\n//Toggle Done\nconst toggleDone=(toggleDoneId)=>{\n  setTasks(\n    tasks.map((task)=>task.id===toggleDoneId?{\n      ...task, isDone:!task.isDone}: task)\n  )\n}\n\n//SHOW ADD TASK\nconst toggleShow= () =>setShowAddTask(!showAddTask)\n\n  return (\n    <div className=\"container\">\n     <Header title=\"Task Tracker\" showAddTask={showAddTask} toggleShow={toggleShow}/>\n     <AddTask addTask={addTask} />\n     {\n       tasks.length>0 ? (<Tasks tasks={tasks} deleteTask={deleteTask}\n         toggleDone={toggleDone} />):(\n           <p style={{textAlign:\"center\", color:\"gray\"}}>No Task To Show</p>\n         )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}